AWSTemplateFormatVersion: 2010-09-09 
Description: >- 
  Stelligent CloudFormation Sample Template ** This template creates one or more 
  Amazon resources. You will be billed for the AWS resources used if you create 
  a stack from this template. 
Parameters: 
  EC2KeyPairName: 
    Description: >- 
      Name of an existing Amazon EC2 key pair to enable SSH access to the 
      instances. 
    Type: 'AWS::EC2::KeyPair::KeyName' 
    MinLength: '1' 
    MaxLength: '255' 
    AllowedPattern: '[\x20-\x7E]*' 
    ConstraintDescription: Can contain only ASCII characters. 
  EmailAddress: 
    Description: Email Address 
    Type: String 

  S3Bucket: 
    Type: String 
    Default: poreddy-pipeline 
    Description: The unique bucket name where deployment distribution is located 
  S3Key: 
    Type: String 
    Default: web-app-pipeline-new/web-app-pipeline-new.zip 
    Description: The unique bucket name where deployment distribution is located 
  TagKey: 
    Type: String 
    Default: Name 
    Description: >- 
      The tag name that is associated with EC2 instances on which CodeDeploy 
      agent is installed 
  TagValue: 
    Description: The tag value that identifies this as a target for deployments. 
    Type: String 
    Default: CodeDeployEC2Tag 
    AllowedPattern: '[\x20-\x7E]*' 
    ConstraintDescription: Can contain only ASCII characters. 


  RepositoryOwner:
    Type: String
    Description: The owner of the GitHub repository.
  RepositoryName:
    Type: String
    Description: The name of the GitHub repository.
  RepositoryBranch:
    Type: String
    Description: The name of the branch.
    Default: master


Resources: 

  CodePipelineRole: 
    Type: 'AWS::IAM::Role' 
    Properties: 
      AssumeRolePolicyDocument: 
        Statement: 
          - Effect: Allow 
            Principal: 
              Service: 
                - codepipeline.amazonaws.com 
            Action: 
              - 'sts:AssumeRole' 
      Path: / 
      Policies: 
        - PolicyName: codepipeline-service 
          PolicyDocument: 
            Statement: 

              - Action: 
                  - 's3:GetObject' 
                  - 's3:GetObjectVersion' 
                  - 's3:GetBucketVersioning' 
                Resource: '*' 
                Effect: Allow 
              - Action: 
                  - 's3:PutObject' 
                Resource: 
                  - 'arn:aws:s3:::codepipeline*' 
                  - 'arn:aws:s3:::elasticbeanstalk*' 
                Effect: Allow 
              - Action: 
                  - 'codedeploy:CreateDeployment' 
                  - 'codedeploy:GetApplicationRevision' 
                  - 'codedeploy:GetDeployment' 
                  - 'codedeploy:GetDeploymentConfig' 
                  - 'codedeploy:RegisterApplicationRevision' 
                Resource: '*' 
                Effect: Allow 
              - Action: 
                  - 'elasticbeanstalk:*' 
                  - 'ec2:*' 
                  - 'elasticloadbalancing:*' 
                  - 'autoscaling:*' 
                  - 'cloudwatch:*' 
                  - 's3:*' 
                  - 'sns:*' 
                  - 'cloudformation:*' 
                  - 'rds:*' 
                  - 'sqs:*' 
                  - 'ecs:*' 
                  - 'iam:PassRole' 
                Resource: '*' 
                Effect: Allow 
              - Action: 
                  - 'lambda:InvokeFunction' 
                  - 'lambda:ListFunctions' 
                Resource: '*' 
                Effect: Allow 
               
              - Action: 
                  - codebuild:BatchGetBuilds 
                  - codebuild:StartBuild 
                Resource: 
                  - !GetAtt CodeBuildProject.Arn    
                Effect: Allow                
            Version: 2012-10-17 
 
 
  CodeBuildProject: 
    Type: AWS::CodeBuild::Project 
    Properties: 
      Name: !Sub ${RepoName}-build 
      Source: 
        Type: CODEPIPELINE 
        BuildSpec: buildspec.yaml 
      Artifacts: 
        Type: CODEPIPELINE 
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn 
      Environment: 
        Type: LINUX_CONTAINER 
        ComputeType: BUILD_GENERAL1_SMALL 
        Image: aws/codebuild/standard:1.0 
        EnvironmentVariables: 
          - Name: S3_BUCKET 
            Value: !Ref ArtifactsBucket 
      Cache: 
        Type: S3 
        Location: 
          Fn::Sub: ${ArtifactsBucket}/cache    
 
  CodeBuildServiceRole: 
    Type: AWS::IAM::Role 
    Properties: 
      AssumeRolePolicyDocument: 
        Version: 2012-10-17 
        Statement: 
          - Effect: Allow 
            Principal: 
              Service: 
                - codebuild.amazonaws.com 
            Action: 
              - sts:AssumeRole 
      Policies: 
        - PolicyName: CodeBuildTrustPolicy 
          PolicyDocument: 
            Version: 2012-10-17 
            Statement: 
              - Effect: Allow 
                Action: 
                  - logs:CreateLogGroup 
                Resource: "*" 
              - Effect: Allow 
                Action: 
                  - logs:CreateLogStream 
                  - logs:PutLogEvents 
                Resource: 
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${RepoName}-build 
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${RepoName}-build:* 
 
              - Effect: Allow 
                Action: 
                  - s3:GetObject 
                  - s3:GetObjectVersion 
                  - s3:PutObject 
                Resource: 
                  - !Sub arn:aws:s3:::${ArtifactsBucket}/* 
 
 
  ArtifactsBucket: 
    Type: AWS::S3::Bucket 
    Properties: 
      BucketName: !Sub codepipeline.${RepoName}.${AWS::Region} 
 
      BucketEncryption:  
        ServerSideEncryptionConfiguration:  
        - ServerSideEncryptionByDefault: 
            SSEAlgorithm: AES256 
      LifecycleConfiguration: 
        Rules: 
          - Id: DeleteBuildArtifactsAfterOneWeek 
            ExpirationInDays: 7 
            Status: Enabled  
 
  CodeDeployEC2InstancesStack: 
    Type: 'AWS::CloudFormation::Stack' 
    Properties: 
      TemplateURL: >- 
        https://poreddy-pipeline.s3.amazonaws.com/ec2.yaml 
      TimeoutInMinutes: '60' 
      Parameters: 
        TagValue: !Ref TagValue 
        KeyPairName: !Ref EC2KeyPairName 
  MyApplication: 
    Type: 'AWS::CodeDeploy::Application' 
    DependsOn: CodeDeployEC2InstancesStack 
  MyDeploymentGroup: 
    Type: 'AWS::CodeDeploy::DeploymentGroup' 
    DependsOn: MyApplication 
    Properties: 
      ApplicationName: !Ref MyApplication 
      Deployment: 
        Description: First time 
        IgnoreApplicationStopFailures: 'true' 
        Revision: 
          RevisionType: S3 
          S3Location: 
            Bucket: !Ref S3Bucket 
            BundleType: Zip 
            Key: !Ref S3Key 
      Ec2TagFilters: 
        - Key: !Ref TagKey 
          Value: !Ref TagValue 
          Type: KEY_AND_VALUE 
      ServiceRoleArn: !GetAtt  
        - CodeDeployEC2InstancesStack 
        - Outputs.CodeDeployTrustRoleARN 
  CodePipelineStack: 
    Type: 'AWS::CodePipeline::Pipeline' 
    Properties: 
      RoleArn: !Join  
        - '' 
        - - 'arn:aws:iam::' 
          - !Ref 'AWS::AccountId' 
          - ':role/' 
          - !Ref CodePipelineRole 
      Stages: 
        - Name: Source
          Actions:
            - Name: Checkout
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref RepositoryOwner
                Repo: !Ref RepositoryName
                Branch: !Ref RepositoryBranch
                OAuthToken: "{{resolve:ssm:/github/personal_access_token:1}}"
              OutputArtifacts:
              - Name: SourceOutput
 
        - Name: Build 
          Actions: 
            - Name: Build 
              ActionTypeId: 
                Category: Build 
                Owner: AWS 
                Provider: CodeBuild 
                Version: 1 
              Configuration: 
                ProjectName: !Ref CodeBuildProject 
              InputArtifacts: 
                - Name: MyApp 
              OutputArtifacts: 
                - Name: BuildOutput 
 
        - Name: Beta 
          Actions: 
            - InputArtifacts: 
                - Name: MyApp 
              Name: DemoFleet 
              ActionTypeId: 
                Category: Deploy 
                Owner: AWS 
                Version: '1' 
                Provider: CodeDeploy 
              OutputArtifacts: [] 
              Configuration: 
                ApplicationName: !Ref MyApplication 
                DeploymentGroupName: !Ref MyDeploymentGroup 
              RunOrder: 1 
      ArtifactStore: 
        Type: S3 
        Location: !Join  
          - '' 
          - - codepipeline- 
            - !Ref 'AWS::Region' 
            - '-' 
            - !Ref 'AWS::AccountId' 
Outputs: 
  CodeDeployDeploymentGroup: 
    Value: !Ref MyDeploymentGroup 
  CodePipelineRole: 
    Value: !Ref CodePipelineRole 
  CloneUrlSsh: 
    Value: !GetAtt  
      - MyRepo 
      - CloneUrlSsh 
  CodePipelineURL: 
    Value: !Join  
      - '' 
      - - 'https://console.aws.amazon.com/codepipeline/home?region=' 
        - !Ref 'AWS::Region' 
        - '#/view/' 
        - !Ref CodePipelineStack 
    Description: Deployment Pipeline URL 

  CodeDeployURL: 
    Value: !Join  
      - '' 
      - - 'https://console.aws.amazon.com/codedeploy/home?region=' 
        - !Ref 'AWS::Region' 
        - '#/deployments/' 
    Description: CodeDeploy URL 